name: Pull Request

on:
  push:
    branches: [ "main" ]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Pull Request
    runs-on: ubuntu-latest
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - uses: actions/checkout@v3
      - run: echo "The ${{ github.repository }} repository has been cloned."
      - run: echo "Setting up JDK"

      - name: set up JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'temurin'
          cache: gradle

      - run: echo "The workflow is now ready to test your code."

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Setup env variables
        env:
          PET_FINDER_CLIENT_ID: ${{ secrets.PET_FINDER_CLIENT_ID }}
          PET_FINDER_CLIENT_SECRET: ${{ secrets.PET_FINDER_CLIENT_SECRET }}
          GEOAPIFY_API_KEY: ${{ secrets.GEOAPIFY_API_KEY }}
        run: |
          echo "PET_FINDER_CLIENT_ID=\"$PET_FINDER_CLIENT_ID\"" >> local.properties
          echo "PET_FINDER_CLIENT_SECRET=\"$PET_FINDER_CLIENT_SECRET\"" >> local.properties
          echo "GEOAPIFY_API_KEY=\"$GEOAPIFY_API_KEY\"" >> local.properties
      - run: curl -sSLO https://github.com/pinterest/ktlint/releases/download/1.3.1/ktlint && chmod a+x ktlint
      - name: Ktlint
        run: |
          ./ktlint "**/src/**/*.kt" --editorconfig=.editorconfig

      - name: Unit Tests
        run: ./gradlew testDebugUnitTest

      - name: Upload test report (failure only)
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: test-reports
          path: '*/build/reports/tests'

      - name: Upload Jacoco test coverage report (success only)
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: jacoco-test-reports
          path: '*/build/reports/jacocoTestReport'

      - run: echo "Building Debug APK."
      - name: Build with Gradle
        run: ./gradlew build
      - run: echo "Build status report=${{ job.status }}."
